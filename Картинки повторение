Вивод - <?php echo dvt_get_images_post( $post_ID, 'thumb-67', 'thumb-425' ); ?>







add_action( 'add_meta_boxes', 'add_dvt_upload_meta_box' );  
	
function add_dvt_upload_meta_box() {  
    add_meta_box(
        'dvt_upload_meta_box',
        __('Цветовые решения','dvt'),
        'add_dvt_upload_meta',
        'post',
        'normal',
        'high'
    );      
} 



function add_dvt_upload_meta($post) {
    wp_nonce_field( 'save_dvt_upload_meta', 'dvt_upload_meta' );
?> 
	<script type="text/javascript">
	//возвращаем live метод 
jQuery.fn.live = function (types, data, fn) {
	jQuery(this.context).on(types,this.selector,data,fn);
	return this;
};

(function($){ 
	$(function(){ 
		if ( $( ".sortabled-dvt" ).length > 0 ) {
            $( ".sortabled-dvt" ).each(function(){
                $(this).sortable();
                console.log('1111')
                
            });
		}
		  
		
		$('.add_new_image').click(function(){
		    $(this).prev('div').append('<p><input type="hidden" name="'+$(this).data('name')+'" value=""  size="27" /><input type="button" value="Загрузить" class="specialclass button"></p>');
		});
		
		
		$('span.lopad').live( 'click' , function(){  
			$(this).parent('p').children('input').val('');
			$(this).parent('p').children('input').css("display","none");
			$(this).parent('p').children('img').remove();
			$(this).unwrap();
			$(this).remove();
		});  
		
		
		var media_frame;
		var formlabel = 0;
		
		// Bind to our click event in order to open up the new media experience.
		$(document.body).on('click.crOpenMediaManager', '.specialclass', function(e){ //open-media is the class of our form button
			// Prevent the default action from occuring.
			e.preventDefault();
			// Get our Parent element
			formlabel = jQuery(this).parent();
			// If the frame already exists, re-open it.
			if ( media_frame ) {
				media_frame.open();
				return;
			}
			media_frame = wp.media.frames.media_frame = wp.media({
				
				//Create our media frame
				className: 'media-frame cr-media-frame',
				frame: 'select', //Allow Select Only
				multiple: false, //Disallow Mulitple selections
				library: {
					type: 'image' //Only allow images
				},
			});
			media_frame.on('select', function(){
				// Grab our attachment selection and construct a JSON representation of the model.
				var media_attachment = media_frame.state().get('selection').first().toJSON();
				
				// Send the attachment URL to our custom input field via jQuery.
				
				formlabel.find('input[type="hidden"]').val(media_attachment.id);
				formlabel.find('input[type="hidden"]');
				formlabel.find('input.specialclass,label,br').remove();
				formlabel.prepend('<img class="lpoad" src="'+ media_attachment.url +'" alt="" width="260px"><span class="lopad"></span>');
			});
			
			
			// Now that everything has been set, let's open up the frame.
			media_frame.open();
		});
		
		
		
	});  
})(jQuery) 	


	</script>
	<div id="myfor" class="sortabled-dvt">
<?php 
            $images = get_post_meta($post->ID, 'other_colors', true);
            
			if ( $images ) :
				foreach ( $images as $value ) :
				    $src = wp_get_attachment_image_url( $value );
				    if ( !$src ) continue; 
?>
    				<p class="draggable">
    					<input type="hidden" class="upload lopad" name="extra[other_colors][]" value="<?php echo $value ?>" />
                        <img class="lopad" src="<?php echo $src ?>" />
                        <span class="lopad"></span>
    				</p>
<?php  
                endforeach;				
            endif;
?>
	</div>
	
	<input type="button"  class="add-field button button-primary button-large add_new_image" value="<?php _e('Добавить изображение','dvt');?>" id="addnew" data-name="extra[other_colors][]" />	
    
    <input type="hidden" name="extra_fields_nonce" value="<?php echo wp_create_nonce(__FILE__); ?>" />
    
	<?php 
}



add_action('save_post', 'dvt_fields_update', 0);

/* Сохраняем данные, при сохранении поста */
function dvt_fields_update( $post_id ){
    if ( !isset( $_POST['extra_fields_nonce'] ) ) return false;
    if ( !wp_verify_nonce($_POST['extra_fields_nonce'], __FILE__) ) return false; 
	if ( defined('DOING_AUTOSAVE') && DOING_AUTOSAVE  ) return false; 
	if ( !current_user_can('edit_post', $post_id) ) return false; 

	if( !isset($_POST['extra']) ) {
       return false;
	} 
    
    if ( ! isset( $_POST['extra']['exclude_in_home'] ) ) {
        delete_post_meta( $post_id, 'exclude_in_home' );
    }

	foreach( $_POST['extra'] as $key=>$value ){               
		if( empty($value) ){
			delete_post_meta($post_id, $key); 
			continue;
		}
		update_post_meta($post_id, $key, $value); 
	}
	return $post_id;
}  



/**
 * Функция получения изображений записи
**/
function dvt_get_images_post( $post_id=0, $size_img = "thumb-67", $size_link = "thumb-400", $meta_key = 'other_colors', $class="" ) {
    $out = '';
                
    $images = get_post_meta( $post_id, $meta_key, 1 );
        
    if ( empty( $images ) )
        return $out;
        
    if ( ! is_array( $images ) )
        $images = array( $images );    
     
    foreach ( $images AS $image ) :                         
        $small_url = wp_get_attachment_image_url( $image, $size_img );        				    
        if ( !$small_url ) continue;                            
        $big_url = wp_get_attachment_image_url( $image, $size_link );  
		$full_url = wp_get_attachment_image_url( $image, 'full' ); 
        $title = get_the_title($image);
        $out .= '<div><img src="'.$big_url.'"/></div>';                            
    endforeach; 
                        
    return $out;     
}


/**
 * Функция получения изображений записи
**/
function dvt_get_images_post_two( $post_id=0, $size_img = "thumb-67", $size_link = "thumb-400", $meta_key = 'other_colors', $class="" ) {
    $out = '';
                
    $images = get_post_meta( $post_id, $meta_key, 1 );
        
    if ( empty( $images ) )
        return $out;
        
    if ( ! is_array( $images ) )
        $images = array( $images );    
     
    foreach ( $images AS $image ) :                         
        $small_url = wp_get_attachment_image_url( $image, $size_img );        				    
        if ( !$small_url ) continue;                            
        $big_url = wp_get_attachment_image_url( $image, $size_link );  
		$full_url = wp_get_attachment_image_url( $image, 'full' ); 
        $title = get_the_title($image);
        $out .= '<a href="'. $big_url .'" class="preview-thumb '.$class.'" full="'.$full_url.'"title="'.$title.'"><img src="'.$small_url.'" alt="'.$title.'" /></a>';                            
    endforeach; 
                        
    return $out;     
}
